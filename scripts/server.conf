# /etc/nginx/conf.d/server.conf
# I did sudo mv default.conf default.conf.bak so nginx doesn't use that file

# Redirect http traffic to https traffic on port 443
server {
listen 80;
listen [::]:80;
server_name trials.massimmersionapproach.com www.trials.massimmersionapproach.com;
return 301 https://$server_name$request_uri;
client_max_body_size 20M;
}

# https server
server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;
  server_name trials.massimmersionapproach.com www.trials.massimmersionapproach.com;
  client_max_body_size 20M;

  # vue app & front-end files
  location / {
    root /opt/frontend/build;
    try_files $uri $uri/ /index.html;
  }

  # node api reverse proxy
  location /api/ {
    proxy_pass http://localhost:3000/api/;
  }

  # HTTPS configuration
  ssl_certificate /etc/letsencrypt/live/trials.massimmersionapproach.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/trials.massimmersionapproach.com/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_session_cache shared:SSL:5m;
  ssl_session_timeout 1h;
  add_header Strict-Transport-Security “max-age=15768000” always;

  # gzip compression
  gzip on; # enables gzip compression
  gzip_vary on; #tells proxies to cache both gzipped and regular versions of a resource
  gzip_min_length 10240; # informs NGINX to not compress anything smaller than the defined size
  gzip_proxied expired no-cache no-store private auth; # compress data even for clients that are connecting via proxies (i.e enabling compression if: a response header includes the "expired", "no-cache", "no-store", "private", and "Authorization" parameters)
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml; # enables the types of files that can be compressed
  gzip_disable "MSIE [1-6]\."; # disable compression for Internet Explorer versions 1-6
}
